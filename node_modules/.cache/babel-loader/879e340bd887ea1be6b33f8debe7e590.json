{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\React state management\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\sideFunctions\\\\Percentage.js\";\nimport React from \"react\";\nimport percentage from \"./MathEquations\";\n\nfunction PercentageBar({\n  elapsed,\n  sessionStatus,\n  focusTimer,\n  breakTimer\n}) {\n  const percComplete = percentage(elapsed, sessionStatus, focusTimer, breakTimer);\n  console.log(percComplete);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": percComplete // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: percComplete + \"%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }));\n}\n\n;\nexport default PercentageBar;","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/React state management/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/sideFunctions/Percentage.js"],"names":["React","percentage","PercentageBar","elapsed","sessionStatus","focusTimer","breakTimer","percComplete","console","log","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA,UAA1B;AAAsCC,EAAAA;AAAtC,CAAvB,EAA2E;AAEvE,QAAMC,YAAY,GAAGN,UAAU,CAACE,OAAD,EAAUC,aAAV,EAAyBC,UAAzB,EAAqCC,UAArC,CAA/B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AAEA,sBACI,uDACA;AACQ,IAAA,SAAS,EAAC,cADlB;AAEQ,IAAA,IAAI,EAAC,aAFb;AAGQ,qBAAc,GAHtB;AAIQ,qBAAc,KAJtB;AAKQ,qBAAeA,YALvB,CAKqC;AALrC;AAMQ,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAEH,YAAY,GAAC;AAAtB,KANf,CAM4C;AAN5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ;AAYH;;AAAA;AAED,eAAeL,aAAf","sourcesContent":["import React from \"react\";\r\nimport percentage from \"./MathEquations\";\r\n\r\nfunction PercentageBar({ elapsed, sessionStatus, focusTimer, breakTimer }) {\r\n    \r\n    const percComplete = percentage(elapsed, sessionStatus, focusTimer, breakTimer)\r\n    console.log(percComplete)\r\n    \r\n    return (\r\n        <>\r\n        <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={percComplete} // TODO: Increase aria-valuenow as elapsed time increases\r\n                style={{ width: percComplete+\"%\" }} // TODO: Increase width % as elapsed time increases\r\n              />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PercentageBar;"]},"metadata":{},"sourceType":"module"}