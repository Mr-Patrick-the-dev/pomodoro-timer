{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\React state management\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { checkMax, checkMin, checkHour } from \"./sideFunctions/MathEquations\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport sessionRunning from \"./sideFunctions/FocusTimer\";\nimport PercentageBar from \"./components/PercentageBar\";\nimport SessionTracker from \"./components/SessionTracker\";\nimport PausedTimer from \"./components/Paused\";\nimport { disableWhenStopped, disableWhenRunning } from \"./sideFunctions/ButtonDisablers\";\n\nfunction Pomodoro() {\n  //Click handlers\n  //Increase the session timer\n  //Will use checkMax to update the sessionState variable (focus/break) timer, depending on which was clicked\n  const increaseSessionClick = (value, max) => {\n    setSessionStates({ ...sessionStates,\n      [value]: sessionStates[value] + checkMax(value, sessionStates[value], max)\n    });\n  }; //Decrease the session timmer\n  //Will use checkMin to update the sessionState variable (focus/break) timer, depending on which was clicked\n\n\n  const decreaseSessionClick = (value, min) => {\n    setSessionStates({ ...sessionStates,\n      [value]: sessionStates[value] - checkMin(value, sessionStates[value], min)\n    });\n  }; //Stop button event handler\n  //Resets the initial values and sets isTimerRunning back to false\n\n\n  const stopSession = () => {\n    setSessionStates({ ...initialSessionState\n    });\n    setIsTimerRunning(false);\n  }; //Initial state object variable\n\n\n  const initialSessionState = {\n    focusTimer: 1500,\n    breakTimer: 300,\n    elapsed: 0,\n    sessionStatus: \"Focusing\",\n    isStopped: true\n  }; //State variables for the session\n\n  const [sessionStates, setSessionStates] = useState(initialSessionState);\n  const [isTimerRunning, setIsTimerRunning] = useState(false); //Audio element to be passed to session states function\n\n  const audioEl = document.getElementsByClassName(\"audio-element\")[0];\n  useInterval(() => {\n    // Function that updates elapsed, remaining, and session status\n    // Will return object to update sessionStates state object\n    const updatedSessionStates = sessionRunning(sessionStates, audioEl);\n    setSessionStates({ ...sessionStates,\n      ...updatedSessionStates\n    }); // Funciton that will check for the timer to run out and play the audio\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState); //Will ensure isStopped is false\n\n    setSessionStates({ ...sessionStates,\n      isStopped: false\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", checkHour(sessionStates.focusTimer)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: () => decreaseSessionClick(\"focusTimer\", 300)\n  }, disableWhenRunning(sessionStates.isStopped), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: () => increaseSessionClick(\"focusTimer\", 3600)\n  }, disableWhenRunning(sessionStates.isStopped), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", secondsToDuration(sessionStates.breakTimer)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: () => decreaseSessionClick(\"breakTimer\", 60)\n  }, disableWhenRunning(sessionStates.isStopped), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: () => increaseSessionClick(\"breakTimer\", 900)\n  }, disableWhenRunning(sessionStates.isStopped), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"audio\", {\n    className: \"audio-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: \"../../public/alarm/beep.mp3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    onClick: stopSession\n  }, disableWhenStopped(sessionStates.isStopped), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SessionTracker, {\n    sessionStatus: sessionStates.sessionStatus,\n    focusTimer: sessionStates.focusTimer,\n    breakTimer: sessionStates.breakTimer,\n    isStopped: sessionStates.isStopped,\n    elapsed: sessionStates.elapsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 12\n    }\n  }))), /*#__PURE__*/React.createElement(PausedTimer, {\n    isStopped: sessionStates.isStopped,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PercentageBar, {\n    elapsed: sessionStates.elapsed,\n    sessionStatus: sessionStates.sessionStatus,\n    focusTimer: sessionStates.focusTimer,\n    breakTimer: sessionStates.breakTimer,\n    isStopped: sessionStates.isStopped,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/React state management/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","checkMax","checkMin","checkHour","secondsToDuration","sessionRunning","PercentageBar","SessionTracker","PausedTimer","disableWhenStopped","disableWhenRunning","Pomodoro","increaseSessionClick","value","max","setSessionStates","sessionStates","decreaseSessionClick","min","stopSession","initialSessionState","setIsTimerRunning","focusTimer","breakTimer","elapsed","sessionStatus","isStopped","isTimerRunning","audioEl","document","getElementsByClassName","updatedSessionStates","playPause","prevState","oi"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { checkMax, checkMin, checkHour } from \"./sideFunctions/MathEquations\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport sessionRunning from \"./sideFunctions/FocusTimer\";\nimport PercentageBar from \"./components/PercentageBar\";\nimport SessionTracker from \"./components/SessionTracker\";\nimport PausedTimer from \"./components/Paused\";\nimport { disableWhenStopped, disableWhenRunning } from \"./sideFunctions/ButtonDisablers\";\n\n\nfunction Pomodoro() {\n  //Click handlers\n\n  //Increase the session timer\n    //Will use checkMax to update the sessionState variable (focus/break) timer, depending on which was clicked\n  const increaseSessionClick = (value, max) => {\n    setSessionStates({\n      ...sessionStates,\n      [value]: sessionStates[value] + checkMax(value, sessionStates[value], max)\n  });\n };\n\n  //Decrease the session timmer\n    //Will use checkMin to update the sessionState variable (focus/break) timer, depending on which was clicked\n  const decreaseSessionClick = (value, min) => {\n    setSessionStates({\n      ...sessionStates,\n      [value]: sessionStates[value] - checkMin(value, sessionStates[value], min)\n    });\n  };\n\n  //Stop button event handler\n    //Resets the initial values and sets isTimerRunning back to false\n  const stopSession = () => {\n    setSessionStates({\n      ...initialSessionState\n    });\n    setIsTimerRunning(false)\n  };\n\n\n  //Initial state object variable\n  const initialSessionState = {\n    focusTimer: 1500,\n    breakTimer: 300,\n    elapsed: 0,\n    sessionStatus: \"Focusing\",\n    isStopped: true\n  };\n\n  //State variables for the session\n  const [sessionStates, setSessionStates] = useState(initialSessionState);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n\n  //Audio element to be passed to session states function\n  const audioEl = document.getElementsByClassName(\"audio-element\")[0];\n\n\n  useInterval(\n    () => {\n      // Function that updates elapsed, remaining, and session status\n        // Will return object to update sessionStates state object\n      const updatedSessionStates = sessionRunning(sessionStates, audioEl);\n\n      setSessionStates({\n        ...sessionStates,\n        ...updatedSessionStates\n      })\n\n      // Funciton that will check for the timer to run out and play the audio\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n    //Will ensure isStopped is false\n    setSessionStates({\n      ...sessionStates,\n      isStopped: false\n    });\n  };\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            \n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              Focus Duration: {checkHour(sessionStates.focusTimer)}\n            </span>\n            \n            <div className=\"input-group-append\">\n\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={() => decreaseSessionClick(\"focusTimer\", 300)}\n                {...disableWhenRunning(sessionStates.isStopped)}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={() => increaseSessionClick(\"focusTimer\", 3600)}\n                {...disableWhenRunning(sessionStates.isStopped)}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              \n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                Break Duration: {secondsToDuration(sessionStates.breakTimer)}\n              </span>\n              \n              <div className=\"input-group-append\">\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={() => decreaseSessionClick(\"breakTimer\", 60)}\n                  {...disableWhenRunning(sessionStates.isStopped)}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={() => increaseSessionClick(\"breakTimer\", 900)}\n                  {...disableWhenRunning(sessionStates.isStopped)}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            <audio className=\"audio-element\">\n          <source src=\"../../public/alarm/beep.mp3\"></source>\n        </audio>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={stopSession}\n              {...disableWhenStopped(sessionStates.isStopped)}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n\n          </div>\n        </div>\n      </div>\n      <div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n\n           <SessionTracker \n           sessionStatus={sessionStates.sessionStatus} \n           focusTimer={sessionStates.focusTimer} \n           breakTimer={sessionStates.breakTimer} \n           isStopped={sessionStates.isStopped}\n           elapsed={sessionStates.elapsed} />\n\n          </div>\n        </div>\n\n        <PausedTimer \n        isStopped={sessionStates.isStopped}\n        isTimerRunning={isTimerRunning}/>\n\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            \n            < PercentageBar \n            elapsed={sessionStates.elapsed} \n            sessionStatus={sessionStates.sessionStatus} \n            focusTimer={sessionStates.focusTimer} \n            breakTimer={sessionStates.breakTimer}\n            isStopped={sessionStates.isStopped} />  \n            \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}