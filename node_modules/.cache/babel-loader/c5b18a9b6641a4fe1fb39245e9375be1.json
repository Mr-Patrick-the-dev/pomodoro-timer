{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\React state management\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\sideFunctions\\\\Percentage.js\";\nimport React from \"react\";\nimport ActiveSessionCheck from \"./ActiveSessionCheck\";\n\nfunction PercentageBar({\n  focusTimer,\n  breakTimer,\n  sessionStatus,\n  elapsed\n}) {\n  const percComplete = elapsed / ActiveSessionCheck(sessionStatus, focusTimer, breakTimer) * 100;\n  console.log(percComplete);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": percComplete // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: {\n        percComplete\n      }\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 15\n    }\n  })))));\n}\n\n;\nexport default PercentageBar;","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/React state management/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/sideFunctions/Percentage.js"],"names":["React","ActiveSessionCheck","PercentageBar","focusTimer","breakTimer","sessionStatus","elapsed","percComplete","console","log","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA,aAA1B;AAAyCC,EAAAA;AAAzC,CAAvB,EAA2E;AACvE,QAAMC,YAAY,GAAID,OAAO,GAACL,kBAAkB,CAACI,aAAD,EAAgBF,UAAhB,EAA4BC,UAA5B,CAA3B,GAAoE,GAAzF;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,sBACI,uDACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeH,YALjB,CAK+B;AAL/B;AAME,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAE;AAACJ,QAAAA;AAAD;AAAT,KANT,CAMoC;AANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADA,CADJ;AAkBH;;AAAA;AAED,eAAeL,aAAf","sourcesContent":["import React from \"react\";\r\nimport ActiveSessionCheck from \"./ActiveSessionCheck\";\r\n\r\nfunction PercentageBar({ focusTimer, breakTimer, sessionStatus, elapsed }) {\r\n    const percComplete = (elapsed/ActiveSessionCheck(sessionStatus, focusTimer, breakTimer))*100\r\n    console.log(percComplete)\r\n    return (\r\n        <>\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={percComplete} // TODO: Increase aria-valuenow as elapsed time increases\r\n                style={{ width: {percComplete} }} // TODO: Increase width % as elapsed time increases\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PercentageBar;"]},"metadata":{},"sourceType":"module"}