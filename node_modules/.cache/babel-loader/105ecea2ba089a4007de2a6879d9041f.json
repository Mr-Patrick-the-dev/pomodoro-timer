{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\React state management\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\components\\\\session-tracker.js\";\nimport React from \"react\";\nimport { checkHour, timeRemaining } from \"../sideFunctions/MathEquations\";\nimport { secondsToDuration } from \"../../utils/duration\";\nimport ActiveSessionCheck from \"../sideFunctions/ActiveSessionCheck\";\n\nfunction SessionTracker({\n  sessionStatus,\n  focusTimer,\n  breakTimer,\n  isStopped,\n  elapsed\n}) {\n  // Should only appear when isStopped is false\n  return !isStopped && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, sessionStatus, \" for \", checkHour(ActiveSessionCheck(sessionStatus, focusTimer, breakTimer)), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, secondsToDuration(timeRemaining(elapsed, sessionStatus, focusTimer, breakTimer)), \" remaining\"));\n}\n\n;\nexport default SessionTracker;","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/React state management/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/components/session-tracker.js"],"names":["React","checkHour","timeRemaining","secondsToDuration","ActiveSessionCheck","SessionTracker","sessionStatus","focusTimer","breakTimer","isStopped","elapsed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,gCAAzC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,UAAjB;AAA6BC,EAAAA,UAA7B;AAAyCC,EAAAA,SAAzC;AAAoDC,EAAAA;AAApD,CAAxB,EAAuF;AACnF;AACA,SACI,CAACD,SAAD,iBACI,uDACI;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCH,aAAjC,WAAqDL,SAAS,CAACG,kBAAkB,CAACE,aAAD,EAAgBC,UAAhB,EAA4BC,UAA5B,CAAnB,CAA9D,aADJ,eAEI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCL,iBAAiB,CAACD,aAAa,CAACQ,OAAD,EAAUJ,aAAV,EAAyBC,UAAzB,EAAqCC,UAArC,CAAd,CADlB,eAFJ,CAFR;AASH;;AAAA;AAGD,eAAeH,cAAf","sourcesContent":["import React from \"react\";\r\nimport { checkHour, timeRemaining } from \"../sideFunctions/MathEquations\";\r\nimport { secondsToDuration } from \"../../utils/duration\";\r\nimport ActiveSessionCheck from \"../sideFunctions/ActiveSessionCheck\";\r\n\r\nfunction SessionTracker({ sessionStatus, focusTimer, breakTimer, isStopped, elapsed }) {\r\n    // Should only appear when isStopped is false\r\n    return (\r\n        !isStopped &&\r\n            <>\r\n                <h2 data-testid=\"session-title\">{sessionStatus} for {checkHour(ActiveSessionCheck(sessionStatus, focusTimer, breakTimer))} minutes</h2>\r\n                <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                {secondsToDuration(timeRemaining(elapsed, sessionStatus, focusTimer, breakTimer))} remaining\r\n                </p>\r\n            </>\r\n    );\r\n};\r\n\r\n\r\nexport default SessionTracker;"]},"metadata":{},"sourceType":"module"}