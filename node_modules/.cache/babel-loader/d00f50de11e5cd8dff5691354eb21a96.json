{"ast":null,"code":"function sessionRunning({\n  focusTimer,\n  breakTimer,\n  elapsed,\n  timeRemaining,\n  sessionStatus\n}, audio) {\n  //Set object to be updated every second and returned to update the states\n  let sessionStatuses = {\n    elapsed: elapsed,\n    sessionStatus: sessionStatus,\n    focusTimer: focusTimer,\n    breakTimer: breakTimer\n  }; //Check that the session status is set to Focus\n\n  if (sessionStatuses.sessionStatus === \"Focusing\") {\n    //Check that the time elapsed is still less than the timer set\n    if (sessionStatuses.elapsed < sessionStatuses.focusTimer) {\n      //Add 1 second to elapsed\n      sessionStatuses.elapsed = sessionStatuses.elapsed + 1; //Return the updated sessionStatuses\n\n      return sessionStatuses;\n    } else {\n      //Focus timer is up, switch status to Break, timeRemaining to breakTimer, and set elapsed to 0\n      sessionStatuses.sessionStatus = \"On Break\";\n      sessionStatuses.elapsed = 0;\n      audio.play();\n      return sessionStatuses;\n    }\n  } else {\n    //This signifies sessionStatus is set to Break\n    //Check that time elapsed is still less than timer set\n    if (sessionStatuses.elapsed < sessionStatuses.breakTimer) {\n      sessionStatuses.elapsed = sessionStatuses.elapsed + 1;\n      return sessionStatuses;\n    } else {\n      //Break timer is up, follow same procedure above\n      sessionStatuses.sessionStatus = \"Focusing\";\n      sessionStatuses.elapsed = 0;\n      audio.play();\n      return sessionStatuses;\n    }\n\n    ;\n  }\n\n  ;\n}\n\n;\nexport default SessionRunning;","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/React state management/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/sideFunctions/FocusTimer.js"],"names":["sessionRunning","focusTimer","breakTimer","elapsed","timeRemaining","sessionStatus","audio","sessionStatuses","play","SessionRunning"],"mappings":"AACA,SAASA,cAAT,CAAwB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,UAAd;AAA2BC,EAAAA,OAA3B;AAAoCC,EAAAA,aAApC;AAAmDC,EAAAA;AAAnD,CAAxB,EAA4FC,KAA5F,EAAmG;AAEjG;AACA,MAAIC,eAAe,GAAG;AACpBJ,IAAAA,OAAO,EAAEA,OADW;AAEpBE,IAAAA,aAAa,EAAEA,aAFK;AAGpBJ,IAAAA,UAAU,EAAEA,UAHQ;AAIpBC,IAAAA,UAAU,EAAEA;AAJQ,GAAtB,CAHiG,CAUjG;;AACA,MAAIK,eAAe,CAACF,aAAhB,KAAkC,UAAtC,EAAkD;AAEhD;AACA,QAAIE,eAAe,CAACJ,OAAhB,GAA0BI,eAAe,CAACN,UAA9C,EAA0D;AAExD;AACAM,MAAAA,eAAe,CAACJ,OAAhB,GAA0BI,eAAe,CAACJ,OAAhB,GAA0B,CAApD,CAHwD,CAKxD;;AACA,aAAOI,eAAP;AACD,KAPD,MAOO;AAEL;AACAA,MAAAA,eAAe,CAACF,aAAhB,GAAgC,UAAhC;AAEAE,MAAAA,eAAe,CAACJ,OAAhB,GAA0B,CAA1B;AAEAG,MAAAA,KAAK,CAACE,IAAN;AAEA,aAAOD,eAAP;AACD;AACF,GArBD,MAqBO;AACL;AAEA;AACA,QAAIA,eAAe,CAACJ,OAAhB,GAA0BI,eAAe,CAACL,UAA9C,EAA0D;AAExDK,MAAAA,eAAe,CAACJ,OAAhB,GAA0BI,eAAe,CAACJ,OAAhB,GAA0B,CAApD;AAEF,aAAOI,eAAP;AACC,KALD,MAKO;AAEL;AACAA,MAAAA,eAAe,CAACF,aAAhB,GAAgC,UAAhC;AAEAE,MAAAA,eAAe,CAACJ,OAAhB,GAA0B,CAA1B;AAEAG,MAAAA,KAAK,CAACE,IAAN;AAEA,aAAOD,eAAP;AACD;;AAAA;AACF;;AAAA;AACF;;AAAA;AAED,eAAeE,cAAf","sourcesContent":["\r\nfunction sessionRunning({ focusTimer, breakTimer,  elapsed, timeRemaining, sessionStatus }, audio) {\r\n  \r\n  //Set object to be updated every second and returned to update the states\r\n  let sessionStatuses = {\r\n    elapsed: elapsed,\r\n    sessionStatus: sessionStatus,\r\n    focusTimer: focusTimer,\r\n    breakTimer: breakTimer\r\n  };\r\n\r\n  //Check that the session status is set to Focus\r\n  if (sessionStatuses.sessionStatus === \"Focusing\") {\r\n    \r\n    //Check that the time elapsed is still less than the timer set\r\n    if (sessionStatuses.elapsed < sessionStatuses.focusTimer) {\r\n      \r\n      //Add 1 second to elapsed\r\n      sessionStatuses.elapsed = sessionStatuses.elapsed + 1;\r\n      \r\n      //Return the updated sessionStatuses\r\n      return sessionStatuses;\r\n    } else {\r\n      \r\n      //Focus timer is up, switch status to Break, timeRemaining to breakTimer, and set elapsed to 0\r\n      sessionStatuses.sessionStatus = \"On Break\";\r\n\r\n      sessionStatuses.elapsed = 0;\r\n\r\n      audio.play()\r\n\r\n      return sessionStatuses;\r\n    }\r\n  } else {\r\n    //This signifies sessionStatus is set to Break\r\n    \r\n    //Check that time elapsed is still less than timer set\r\n    if (sessionStatuses.elapsed < sessionStatuses.breakTimer) {\r\n    \r\n      sessionStatuses.elapsed = sessionStatuses.elapsed + 1;\r\n\r\n    return sessionStatuses\r\n    } else {\r\n      \r\n      //Break timer is up, follow same procedure above\r\n      sessionStatuses.sessionStatus = \"Focusing\";\r\n\r\n      sessionStatuses.elapsed = 0;\r\n\r\n      audio.play()\r\n\r\n      return sessionStatuses;\r\n    };\r\n  };\r\n};\r\n\r\nexport default SessionRunning;"]},"metadata":{},"sourceType":"module"}