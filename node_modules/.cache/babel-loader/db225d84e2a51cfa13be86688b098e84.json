{"ast":null,"code":"import React from \"react\";\nimport { percentage } from \"../sideFunctions/MathEquations\";\n\nfunction PercentageBar(sessionStates) {\n  const elapsed = ({\n    elapsed\n  } = sessionStates);\n  console.log(elapsed); //const percComplete = percentage(elapsed, sessionStatus, focusTimer, breakTimer);\n\n  /*return (\r\n      <>\r\n      <div\r\n              className=\"progress-bar\"\r\n              role=\"progressbar\"\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              aria-valuenow={percComplete} // TODO: Increase aria-valuenow as elapsed time increases\r\n              style={{ width: percComplete+\"%\" }} // TODO: Increase width % as elapsed time increases\r\n            />\r\n      </>\r\n  )\r\n  */\n}\n\n;\nexport default PercentageBar;","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/React state management/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/components/percentage-bar.js"],"names":["React","percentage","PercentageBar","sessionStates","elapsed","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,gCAA3B;;AAEA,SAASC,aAAT,CAAwBC,aAAxB,EAAwC;AACpC,QAAMC,OAAO,IAAG;AAACA,IAAAA;AAAD,MAAUD,aAAb,CAAb;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAHoC,CAIpC;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAO;;AAAA;AAEP,eAAeF,aAAf","sourcesContent":["import React from \"react\";\r\nimport { percentage } from \"../sideFunctions/MathEquations\";\r\n\r\nfunction PercentageBar( sessionStates ) {\r\n    const elapsed = {elapsed}=sessionStates \r\n\r\n    console.log(elapsed)\r\n    //const percComplete = percentage(elapsed, sessionStatus, focusTimer, breakTimer);\r\n    \r\n    /*return (\r\n        <>\r\n        <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={percComplete} // TODO: Increase aria-valuenow as elapsed time increases\r\n                style={{ width: percComplete+\"%\" }} // TODO: Increase width % as elapsed time increases\r\n              />\r\n        </>\r\n    )\r\n    */};\r\n\r\nexport default PercentageBar;"]},"metadata":{},"sourceType":"module"}