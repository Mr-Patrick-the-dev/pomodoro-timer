{"ast":null,"code":"import { minutesToDuration, secondsToDuration } from \"../../utils/duration\";\nimport ActiveSessionCheck from \"./ActiveSessionCheck\";\nexport const checkMaxFocus = (num, max) => {\n  if (num < max) {\n    return 300;\n  } else {\n    return 0;\n  }\n\n  ;\n};\nexport const checkMaxBreak = (num, max) => {\n  if (num < max) {\n    return 60;\n  } else {\n    return 0;\n  }\n\n  ;\n};\nexport const checkMinFocus = (num, min) => {\n  if (num > min) {\n    return 300;\n  } else {\n    return 0;\n  }\n\n  ;\n};\nexport const checkMinBreak = (num, min) => {\n  if (num > min) {\n    return 60;\n  } else {\n    return 0;\n  }\n\n  ;\n};\nexport const checkHour = num => {\n  if (num < 3600) {\n    return secondsToDuration(num);\n  } else {\n    return minutesToDuration(num / 60);\n  }\n\n  ;\n};\nexport const percentage = (elapsed, sessionStatus, focusTimer, breakTimer) => {\n  return elapsed / ActiveSessionCheck(sessionStatus, focusTimer, breakTimer) * 100;\n};","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/React state management/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/sideFunctions/MathEquations.js"],"names":["minutesToDuration","secondsToDuration","ActiveSessionCheck","checkMaxFocus","num","max","checkMaxBreak","checkMinFocus","min","checkMinBreak","checkHour","percentage","elapsed","sessionStatus","focusTimer","breakTimer"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,iBAA5B,QAAsD,sBAAtD;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAO,MAAMC,aAAa,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvC,MAAID,GAAG,GAAGC,GAAV,EAAgB;AACd,WAAO,GAAP;AACD,GAFD,MAEO;AACL,WAAO,CAAP;AACD;;AAAA;AACF,CANI;AAQP,OAAO,MAAMC,aAAa,GAAG,CAACF,GAAD,EAAMC,GAAN,KAAc;AACzC,MAAID,GAAG,GAAGC,GAAV,EAAgB;AACZ,WAAO,EAAP;AACD,GAFH,MAES;AACL,WAAO,CAAP;AACD;;AAAA;AACJ,CANM;AAQP,OAAO,MAAME,aAAa,GAAG,CAACH,GAAD,EAAMI,GAAN,KAAc;AACrC,MAAIJ,GAAG,GAAGI,GAAV,EAAe;AACX,WAAO,GAAP;AACH,GAFD,MAEO;AACH,WAAO,CAAP;AACH;;AAAA;AACJ,CANI;AAQP,OAAO,MAAMC,aAAa,GAAG,CAACL,GAAD,EAAMI,GAAN,KAAc;AACrC,MAAIJ,GAAG,GAAGI,GAAV,EAAe;AACX,WAAO,EAAP;AACH,GAFD,MAEO;AACH,WAAO,CAAP;AACH;;AAAA;AACJ,CANI;AAQP,OAAO,MAAME,SAAS,GAAIN,GAAD,IAAS;AAChC,MAAIA,GAAG,GAAG,IAAV,EAAgB;AACd,WAAOH,iBAAiB,CAACG,GAAD,CAAxB;AACD,GAFD,MAEO;AACL,WAAOJ,iBAAiB,CAACI,GAAG,GAAC,EAAL,CAAxB;AACD;;AAAA;AACF,CANM;AAQP,OAAO,MAAMO,UAAU,GAAG,CAACC,OAAD,EAAUC,aAAV,EAAyBC,UAAzB,EAAqCC,UAArC,KAAoD;AAC5E,SAAQH,OAAO,GAACV,kBAAkB,CAACW,aAAD,EAAgBC,UAAhB,EAA4BC,UAA5B,CAA1B,GAAkE,GAA1E;AACD,CAFM","sourcesContent":["import { minutesToDuration, secondsToDuration }  from \"../../utils/duration\";\r\nimport ActiveSessionCheck from \"./ActiveSessionCheck\";\r\nexport const checkMaxFocus = (num, max) => {\r\n    if (num < max ) {\r\n      return 300;\r\n    } else {\r\n      return 0;\r\n    };\r\n  };\r\n\r\nexport const checkMaxBreak = (num, max) => {\r\n  if (num < max ) {\r\n      return 60;\r\n    } else {\r\n      return 0;\r\n    };\r\n}\r\n\r\nexport const checkMinFocus = (num, min) => {\r\n      if (num > min) {\r\n          return 300;\r\n      } else {\r\n          return 0;\r\n      };\r\n  };\r\n\r\nexport const checkMinBreak = (num, min) => {\r\n      if (num > min) {\r\n          return 60;\r\n      } else {\r\n          return 0;\r\n      };\r\n  };\r\n\r\nexport const checkHour = (num) => {\r\n  if (num < 3600) {\r\n    return secondsToDuration(num);\r\n  } else {\r\n    return minutesToDuration(num/60);\r\n  };\r\n};\r\n\r\nexport const percentage = (elapsed, sessionStatus, focusTimer, breakTimer) => {\r\n  return (elapsed/ActiveSessionCheck(sessionStatus, focusTimer, breakTimer)*100)\r\n}"]},"metadata":{},"sourceType":"module"}