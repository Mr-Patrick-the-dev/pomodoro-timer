{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\Desktop\\\\Thinkful\\\\React state management\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { checkMax, checkMin, checkHour } from \"./sideFunctions/MathEquations\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport SessionRunning from \"./sideFunctions/FocusTimer\";\nimport PercentageBar from \"./components/percentage-bar\";\nimport SessionTracker from \"./components/session-tracker\";\nimport PausedTimer from \"./components/paused\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  //Click handlers\n  const increaseSessionClick = (value, max) => {\n    setSessionStates({ ...sessionStates,\n      [value]: sessionStates[value] + checkMax(sessionStates[value], max)\n    });\n  };\n\n  const decreaseSessionClick = (value, min) => {\n    setSessionStates({ ...sessionStates,\n      [value]: sessionStates[value] - checkMin(sessionStates[value], min)\n    });\n  };\n\n  const stopSession = () => {\n    setSessionStates({ ...initialSessionState\n    });\n  }; //State object variable\n\n\n  const initialSessionState = {\n    focusTimer: 1500,\n    breakTimer: 300,\n    elapsed: 0,\n    timeRemaining: 1500,\n    sessionStatus: \"Focusing\",\n    isStopped: true\n  };\n  const [sessionStates, setSessionStates] = useState(initialSessionState);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    // Function that updates elapsed, remaining, and session status\n    // Will return object to update sessionStates state object\n    const updatedSessionStates = SessionRunning(sessionStates);\n    setSessionStates({ ...sessionStates,\n      ...updatedSessionStates\n    });\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n    setSessionStates({ ...sessionStates,\n      isStopped: false\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", checkHour(sessionStates.focusTimer)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: () => decreaseSessionClick(\"focusTimer\", 300),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: () => increaseSessionClick(\"focusTimer\", 3600),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", secondsToDuration(sessionStates.breakTimer)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: () => decreaseSessionClick(\"breakTimer\", 60),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: () => increaseSessionClick(\"breakTimer\", 900),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    onClick: stopSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SessionTracker, {\n    sessionStatus: sessionStates.sessionStatus,\n    focusTimer: sessionStates.focusTimer,\n    breakTimer: sessionStates.breakTimer,\n    timeRemaining: sessionStates.timeRemaining,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 12\n    }\n  }))), /*#__PURE__*/React.createElement(PausedTimer, {\n    isStopped: sessionStates.isStopped,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PercentageBar, {\n    elapsed: sessionStates.elapsed,\n    sessionStatus: sessionStates.sessionStatus,\n    focusTimer: sessionStates.focusTimer,\n    breakTimer: sessionStates.breakTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/patri/Desktop/Thinkful/React state management/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","checkMax","checkMin","checkHour","secondsToDuration","SessionRunning","PercentageBar","SessionTracker","PausedTimer","Pomodoro","increaseSessionClick","value","max","setSessionStates","sessionStates","decreaseSessionClick","min","stopSession","initialSessionState","focusTimer","breakTimer","elapsed","timeRemaining","sessionStatus","isStopped","isTimerRunning","setIsTimerRunning","updatedSessionStates","playPause","prevState","oi","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { checkMax, checkMin, checkHour } from \"./sideFunctions/MathEquations\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport SessionRunning from \"./sideFunctions/FocusTimer\";\nimport PercentageBar from \"./components/percentage-bar\";\nimport SessionTracker from \"./components/session-tracker\";\nimport PausedTimer from \"./components/paused\";\n\n\nfunction Pomodoro() {\n  // Timer starts out paused\n\n  //Click handlers\n  const increaseSessionClick = (value, max) => {\n    setSessionStates({\n      ...sessionStates,\n      [value]: sessionStates[value] + checkMax(sessionStates[value], max)\n  });\n };\n\n  const decreaseSessionClick = (value, min) => {\n    setSessionStates({\n      ...sessionStates,\n      [value]: sessionStates[value] - checkMin(sessionStates[value], min)\n    });\n  };\n\n  const stopSession = () => {\n    setSessionStates({\n      ...initialSessionState\n    });\n  };\n\n\n  //State object variable\n  const initialSessionState = {\n    focusTimer: 1500,\n    breakTimer: 300,\n    elapsed: 0,\n    timeRemaining: 1500,\n    sessionStatus: \"Focusing\",\n    isStopped: true\n  };\n\n  const [sessionStates, setSessionStates] = useState(initialSessionState)\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      // Function that updates elapsed, remaining, and session status\n        // Will return object to update sessionStates state object\n      const updatedSessionStates = SessionRunning(sessionStates);\n\n      setSessionStates({\n        ...sessionStates,\n        ...updatedSessionStates\n      })\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n    setSessionStates({\n      ...sessionStates,\n      isStopped: false\n    });\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {checkHour(sessionStates.focusTimer)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={() => decreaseSessionClick(\"focusTimer\", 300)}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={() => increaseSessionClick(\"focusTimer\", 3600)}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {secondsToDuration(sessionStates.breakTimer)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={() => decreaseSessionClick(\"breakTimer\", 60)}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={() => increaseSessionClick(\"breakTimer\", 900)}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={stopSession}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n           <SessionTracker \n           sessionStatus={sessionStates.sessionStatus} \n           focusTimer={sessionStates.focusTimer} \n           breakTimer={sessionStates.breakTimer} \n           timeRemaining={sessionStates.timeRemaining} />\n          </div>\n        </div>\n        <PausedTimer \n        isStopped={sessionStates.isStopped}\n        isTimerRunning={isTimerRunning}/>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n            < PercentageBar \n            elapsed={sessionStates.elapsed} \n            sessionStatus={sessionStates.sessionStatus} \n            focusTimer={sessionStates.focusTimer} \n            breakTimer={sessionStates.breakTimer} />  \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}